import { FrameworkAs } from './framework/framework.as';
import { FrameworkCollection } from './framework/framework.collection';
import { FrameworkCollectionsApi } from './framework/framework.collections';
import { FrameworkCredential } from './framework/framework.credential';
import { FrameworkCredentialsApi } from './framework/framework.credentials';
import { FrameworkCurrentApi } from './framework/framework.current';
import { FrameworkDatabase } from './framework/framework.database';
import { FrameworkDatabasesApi } from './framework/framework.databases';
import { FrameworkDocument } from './framework/framework.document';
import { FrameworkDocuments } from './framework/framework.documents';
import { FrameworkIndex } from './framework/framework.index';
import { FrameworkIndexesApi } from './framework/framework.indexes';
import { FrameworkKey } from './framework/framework.key';
import { FrameworkKeysApi } from './framework/framework.keys';
import { FrameworkRole } from './framework/framework.role';
import { FrameworkRolesApi } from './framework/framework.roles';
import { FrameworkSession } from './framework/framework.session';
import { FrameworkSessionsApi } from './framework/framework.sessions';
import { FrameworkToken } from './framework/framework.token';
import { FrameworkTokensApi } from './framework/framework.tokens';
import { FrameworkUDFunction } from './framework/framework.udfunction';
import { FrameworkUDFunctionsApi } from './framework/framework.udfunctions';
import { FrameworkUser } from './framework/framework.user';
import { FrameworkUsersApi } from './framework/framework.users';
import { FrameworkFoundation } from './framework/framework.foundation';

export interface Framework {
  as: FrameworkAs;
  current: FrameworkCurrentApi;
  foundation: FrameworkFoundation;
  collection: FrameworkCollection;
  collections: FrameworkCollectionsApi;
  credential: FrameworkCredential;
  credentials: FrameworkCredentialsApi;
  database: FrameworkDatabase;
  databases: FrameworkDatabasesApi;
  document: FrameworkDocument;
  documents: FrameworkDocuments;
  index: FrameworkIndex;
  indexes: FrameworkIndexesApi;
  key: FrameworkKey;
  keys: FrameworkKeysApi;
  role: FrameworkRole;
  roles: FrameworkRolesApi;
  session: FrameworkSession;
  sessions: FrameworkSessionsApi;
  token: FrameworkToken;
  tokens: FrameworkTokensApi;
  udfunction: FrameworkUDFunction;
  udfunctions: FrameworkUDFunctionsApi;
  user: FrameworkUser;
  users: FrameworkUsersApi;
}
